"use client";
import React, { useState } from "react";
import { ChevronLeft, ChevronRight } from "lucide-react"; // Optional, for icons
import Image from "next/image";

export default function SectionSlider() {
  const clients = [
    {
      img: "/slide1.png",
      text: "–ó–¥–µ—Å—å —è –Ω–∞—à–ª–∞ –º–Ω–æ–∂–µ—Å—Ç–≤–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤ –∏ —Ä–∞–±–æ—Ç—É –Ω–∞ —Å–≤–æ–π –≤–∫—É—Å. –†–µ–∫–æ–º–µ–Ω–¥—É—é!",
      tags: ["#—Ñ—Ä–∏–ª–∞–Ω—Å", "#–ø–æ–∏—Å–∫—Ä–∞–±–æ—Ç—ã", "#relevants"], // Array of tags
      name: "–°–≤–µ—Ç–ª–∞–Ω–∞",
      desc: "–î–∏–∑–∞–π–Ω–µ—Ä",
    },
    {
      img: "/slide2.png",
      text: "–ö–∞–∫ HR –º–µ–Ω–µ–¥–∂–µ—Ä, –º–Ω–µ –ø—Ä–∏—Ö–æ–¥–∏—Ç—Å—è –Ω–∞–π—Ç–∏ –ª—É—á—à–∏—Ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ –¥–ª—è –Ω–∞—à–∏—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤. –ê —ç—Ç–æ –≤—Å–µ–≥–¥–∞ –∑–∞–Ω–∏–º–∞–µ—Ç –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏. –≠—Ç–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ —É–ø—Ä–æ—Å—Ç–∏–ª–∞ –º–æ—é —Ä–∞–±–æ—Ç—É. üåü –°–ø–∞—Å–∏–±–æ!",
      tags: ["#HR", "#–ø–æ–∏—Å–∫—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤", "#relevants"],
      name: "–°–≤–µ—Ç–ª–∞–Ω–∞",
      desc: "–î–∏–∑–∞–π–Ω–µ—Ä",
    },
    {
      img: "/slide3.png",
      text: "–° —ç—Ç–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–æ–π –±–æ–ª—å—à–µ –Ω–µ —Ç—Ä–∞—á—É –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ –ø–æ–∏—Å–∫ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —Å–≤–æ–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞. –ü—Ä–æ—Å—Ç–æ –æ—Ç–ª–∏—á–Ω–æ! üíº",
      tags: ["#–ø–æ–∏—Å–∫–∫–æ–º–∞–Ω–¥—ã", "#–ø—Ä–æ–µ–∫—Ç—ã", "#relevants"],
      name: "–°–≤–µ—Ç–ª–∞–Ω–∞",
      desc: "–î–∏–∑–∞–π–Ω–µ—Ä",
    },
    {
      img: "/slide4.png",
      text: "–û—Ç–ª–∏—á–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è —Å–≤–æ–±–æ–¥–Ω—ã—Ö –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–≤ –∫–∞–∫ —è. –î–ª—è –º–µ–Ω—è —Ç—É—Ç –≤—Å–µ, —á—Ç–æ –Ω—É–∂–Ω–æ –¥–ª—è —É—Å–ø–µ—à–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤. üíºüë®‚Äçüíª",
      tags: ["#—Ñ—Ä–∏–ª–∞–Ω—Å", "#–ø–∞—Ä—Ç–Ω—ë—Ä—Å—Ç–≤–æ", "#relevants"],
      name: "–°–≤–µ—Ç–ª–∞–Ω–∞",
      desc: "–î–∏–∑–∞–π–Ω–µ—Ä",
    },
    {
      img: "/slide5.png",
      text: "–û—Ç–ª–∏—á–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è —Å–≤–æ–±–æ–¥–Ω—ã—Ö –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–≤ –∫–∞–∫ —è. –î–ª—è –º–µ–Ω—è —Ç—É—Ç –≤—Å–µ, —á—Ç–æ –Ω—É–∂–Ω–æ –¥–ª—è —É—Å–ø–µ—à–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤. üíºüë®‚Äçüíª",
      tags: ["#–∫–æ–ø–∏—Ä–∞–π—Ç–∏–Ω–≥", "#—É–¥–∞–ª–µ–Ω–Ω–∞—è—Ä–∞–±–æ—Ç–∞", "#relevants"],
      name: "–°–≤–µ—Ç–ª–∞–Ω–∞",
      desc: "–î–∏–∑–∞–π–Ω–µ—Ä",
    },
  ];

  const [currentIndex, setCurrentIndex] = useState(0);

  const itemsPerSlide = 4; // for large screens
  const itemsPerSlideMobile = 1;

  const totalSlides = clients.length;
  const prevSlide = () => {
    setCurrentIndex((prev) => (prev === 0 ? totalSlides - 1 : prev - 1));
  };

  const nextSlide = () => {
    setCurrentIndex((prev) => (prev === totalSlides - 1 ? 0 : prev + 1));
  };

  return (
    <main className="dark:bg-[#F7F7F8] bg-[#F7F7F8] mt-20 pt-10 lg:pt-0 lg:mt-0  ">
      <section className="px-7 font-lato text-black max-w-[1600px] 2xl:mx-auto md:px-14 mt-5 md:py-0 lg:py-32 ">
        <div>
          <div className="lg:px-64 text-black space-y-6 lg:space-y-8  mx-auto">
            <h1 className=" text-[28px] text-center leading-[34px] font-semibold lg:text-[48px] lg:font-bold lg:leading-[52px]">
              –ß—Ç–æ –≥–æ–≤–æ—Ä—è—Ç –æ –Ω–∞—Å
            </h1>
            <p className="font-lato text-[14px] text-center leading-[20px] lg:text-[18px] lg:leading-[26px]">
              Relevants —Å–æ–∑–¥–∞–Ω –∫–æ–º–∞–Ω–¥–æ–π –ò–¢-—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ –∏ –∫—Ä–µ–∞—Ç–æ—Ä–æ–≤ –∏–∑ —Ç–æ–ø–æ–≤—ã—Ö
              digital –∞–≥–µ–Ω—Ç—Å—Ç–≤ —Å –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–º –æ–ø—ã—Ç–æ–º, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –ø–æ–Ω–∞—Å–ª—ã—à–∫–µ
              –∑–Ω–∞—é—Ç, —á—Ç–æ –∫–∞–¥—Ä—ã —Ä–µ—à–∞—é—Ç –∏ –∑–Ω–∞–µ–º, –Ω–∞—Å–∫–æ–ª—å–∫–æ –≤–∞–∂–Ω–æ, —á—Ç–æ–±—ã –∑–∞–ø—É—Å–∫
              –ø—Ä–æ–µ–∫—Ç–æ–≤ –∏ –ø–æ–∏—Å–∫ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ –±—ã–ª –¥–æ—Å—Ç—É–ø–Ω—ã–º –∏ –±—ã—Å—Ç—Ä—ã–º
            </p>
          </div>
        </div>
        {/* testimonials */}

        <div className="py-7 lg:py-20">
          <div className=" overflow-hidden">
            <div className="">
              {/* Slider Content */}
              <div
                className="flex transition-transform duration-500"
                style={{
                  transform: `translateX(-${currentIndex * 100}%)`,
                }}
              >
                {clients.map((client, index) => (
                  <div
                    key={index}
                    className="w-full sm:w-1/2 lg:w-1/4 flex-shrink-0 px-4"
                  >
                    <div className="bg-white p-6 rounded-3xl">
                      {/* Client Image */}
                      <div className="w-28 h-28 rounded-full mx-auto mb-4 overflow-hidden">
                        <Image
                          src={client.img}
                          alt={client.name}
                          width={112}
                          height={112}
                          className="object-cover rounded-full w-full h-full"
                          priority
                        />
                      </div>

                      <p className="text-gray-700 text-lg mb-4">
                        {client.text}
                      </p>

                      <div className="flex flex-wrap gap-3 mb-4">
                        {client.tags.map((tag, idx) => (
                          <span
                            key={idx}
                            className="text-gray-700 leading-[20px]"
                          >
                            {tag}
                          </span>
                        ))}
                      </div>

                      <div>
                        <h3 className="text-lg font-semibold text-gray-800">
                          {client.name}
                        </h3>
                        <p className="text-sm text-gray-500">{client.desc}</p>
                      </div>
                    </div>
                  </div>
                ))}
              </div>
            </div>

            <div className="mt-7  px-6 lg:mt-14 flex gap-3 justify-start lg:justify-between">
              <div className="hidden lg:flex"></div>
              <div className="relative hidden lg:flex ">
                <button className=" border-2 px-4 py-3 rounded-full border-black text-black">
                  –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –æ—Ç–∑—ã–≤—ã
                </button>
                <Image
                  src="/btnarrow.png"
                  alt="arrow"
                  className="absolute -right-6 -top-9"
                  width={30}
                  height={80}
                />
              </div>
              <div>
                <button
                  onClick={prevSlide}
                  className=" border-2  border-black text-black p-2 rounded-full"
                >
                  <ChevronLeft size={24} />
                </button>
                <button
                  onClick={nextSlide}
                  className=" border-2 ml-3 border-black text-black p-2 rounded-full transition"
                >
                  <ChevronRight size={24} />
                </button>
              </div>
            </div>
          </div>
        </div>
      </section>
    </main>
  );
}
